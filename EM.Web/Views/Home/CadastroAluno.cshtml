@using EM.Domain;
@using EM.Domain.ProjetoEM.EM.Domain;
@{
    ViewData["Title"] = "Cadastrar aluno";
}
@model Aluno

<h4>Novo aluno</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form action="CadastroAluno" method="post" class="form-control">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="container">
                <div class="row">
                    <div class="col-3 ">
                        @Html.LabelFor(a => a.Matricula, new { @class = "control-label" })
                        @Html.TextBoxFor(a => a.Matricula, new { @class = "form-control", @required = "tue", @type = "text", @style = "text-align:right", @minlength = "1", @maxlength = "9", @onkeypress = "return onlynumber()", @onpaste = "return false", @ondrop = "return false", @id = "matricula" })
                    </div>
                    <div class="col-9">
                        @Html.LabelFor(a => a.Nome, new { @class = "control-label" })
                        @Html.TextBoxFor(a => a.Nome, new { @class = "form-control", @required = "tue", @id = "nome", @placeholder = "Digite o nome do aluno" })
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label for="Sexo"> Sexo</label>
                        @Html.DropDownListFor(Model => Model.Sexo, new SelectList(Enum.GetValues(typeof(EnumeradorSexo))), htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(a => a.Nascimento, new { @class = "control-label" })
                        @Html.TextBoxFor(a => a.Nascimento, new { @class = "form-control", @id = "nasc", @type = "date", @required = "tue", @onpaste = "return false", @ondrop = "return false" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(a => a.CPF, new { @class = "control-label" })
                        @Html.TextBoxFor(a => a.CPF, new { @class = "form-control", @id = "cpf", @onblur = "return verificarCPF(this.value)", @placeholder = "Digite o cpf do aluno", @onpaste = "return false", @ondrop = "return false", @autocomplete = "off" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-12 text-right">
                        <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-danger"><i class="fa fa-arrow-left" title="Voltar"></i></a>
                        <input type="submit" value="Salvar" class="btn btn-primary " asp-action="CadastroAluno" onclick="return validaCampoMatricula(this), validadataNascimento(), validaCampoNome()" />
                        <a tabindex="3" class="btn btn-warning" asp-area="" asp-controller="Home" asp-action="CadastroAluno" title="Limpar"><i class="fa fa-broom "></i> </a>
                    </div>

                </div>
            </div>
        </form>
    </div>
</div>

<script defer>
    let retorno = @ViewBag.Mensagem;
    validaRetorno();

    function validaRetorno() {
        if (retorno) {
            Swal.fire({
                position: 'top-center',
                icon: 'success',
                title: 'Cadastrado com sucesso!',
                showConfirmButton: false,
                timer: 1500,
            })
        }
        else {
            Swal.fire({
                icon: 'error',
                title: 'Erro ao cadastrar!',
                showConfirmButton: false,
                timer: 1500
            })
        }
        redirecione();
    }

    function redirecione() {
        setTimeout(() => {
            window.location.href = '@Url.Action("Cadastrar", "Home")', 1500;
        }, 1500);
    }

</script>
